################################################################################
#
# Project settings
#
################################################################################

#
# Minimum required version of cmake 
#
CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )

#
# Project name and programming languages used
#
PROJECT( KITE_CODE_EXPORT CXX C )

#
# Folder path for generated executables
#
SET( EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR} )

#
# Folder path for generated libraries
#
SET( LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib )

#
# CMake module(s) path
#
SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR} )

################################################################################
#
# Prerequisites
#
################################################################################

FIND_PACKAGE( ACADO REQUIRED )
FIND_PACKAGE( MHEExport REQUIRED )

################################################################################
#
# User configuration
#
################################################################################

IF( NOT CMAKE_VERBOSE_MAKEFILE )
	SET( CMAKE_VERBOSE_MAKEFILE OFF )
ENDIF( NOT CMAKE_VERBOSE_MAKEFILE )

#
# Build type
#
IF( NOT CMAKE_BUILD_TYPE )
	SET(CMAKE_BUILD_TYPE Debug CACHE STRING
		"Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel."
		FORCE
	)
ENDIF( NOT CMAKE_BUILD_TYPE )

################################################################################
#
# Compiler settings
#
################################################################################

#
# ACADO specific, has to be here
#
ADD_DEFINITIONS( -DACADO_CMAKE_BUILD )

#
# If you need to export code for OROCOS, uncomment this line.
#
# ADD_DEFINITIONS( -DCODEGEN_FOR_OROCOS=1 )

#
# C compiler, C99 support
#
SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99" )

################################################################################
#
# Include directories
#
################################################################################

INCLUDE_DIRECTORIES(
    .
    ${ACADO_INCLUDE_DIRS}
    ${MHE_EXPORT_INCLUDE_DIRS}
)	

################################################################################
#
# Build applications
#
################################################################################

#
# Build NMPC
#
ADD_EXECUTABLE(
    NMPC
    NMPC.cpp
)
TARGET_LINK_LIBRARIES(
	NMPC
	${ACADO_SHARED_LIBRARIES}
)
SET_TARGET_PROPERTIES(
	NMPC
	PROPERTIES
		RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

#
# Build MHE
#
ADD_EXECUTABLE(
    MHE
    MHE.cpp
)
TARGET_LINK_LIBRARIES(
	MHE
	${ACADO_SHARED_LIBRARIES}
	${MHE_EXPORT_SHARED_LIBRARIES}
)
SET_TARGET_PROPERTIES(
	MHE
	PROPERTIES
		RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

#
# Build NMPC equlibrium
#
ADD_EXECUTABLE(
	nmpc_equilibrium
	${PROJECT_SOURCE_DIR}/eq/equilibrium.cpp
)
TARGET_LINK_LIBRARIES(
	nmpc_equilibrium
	${ACADO_SHARED_LIBRARIES}
)
SET_TARGET_PROPERTIES(
	nmpc_equilibrium
	PROPERTIES
		RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/eq
		OUTPUT_NAME equilibrium
)

#
# Build MHE equlibrium
#
ADD_EXECUTABLE(
	mhe_equilibrium
	${PROJECT_SOURCE_DIR}/eq_MHE/equilibrium.cpp
)
TARGET_LINK_LIBRARIES(
	mhe_equilibrium
	${ACADO_SHARED_LIBRARIES}
)
SET_TARGET_PROPERTIES(
	mhe_equilibrium
	PROPERTIES
		RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/eq_MHE
		OUTPUT_NAME equilibrium
)