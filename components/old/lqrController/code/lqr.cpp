/* This function was automatically generated by CasADi */
#include <math.h>

#define d double

int n_in_ = 2;
int n_out_ = 1;
int nrow_[] = {22,22,2};
int ncol_[] = {1,1,1};
int rowind_0_[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22};
int rowind_1_[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22};
int rowind_2_[] = {0,1,2};
int *rowind_[] = {rowind_0_,rowind_1_,rowind_2_};
int col_0_[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int col_1_[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int col_2_[] = {0,0};
int *col_[] = {col_0_,col_1_,col_2_};

int init(int *n_in, int *n_out){
  *n_in = n_in_;
  *n_out = n_out_;
  return 0;
}

int getSparsity(int i, int *nrow, int *ncol, int **rowind, int **col){
  *nrow = nrow_[i];
  *ncol = ncol_[i];
  *rowind = rowind_[i];
  *col = col_[i];
  return 0;
}

double sign(double x){ return x<0 ? -1 : x>0 ? 1 : x;}

int evaluate(const double** x, double** r){
d a1=x[0][0];
d a6=x[0][1];
d a12=x[0][2];
d a18=x[0][3];
d a24=x[0][4];
d a30=x[0][5];
d a36=x[0][6];
d a42=x[0][7];
d a48=x[0][8];
d a54=x[0][9];
d a60=x[0][10];
d a66=x[0][11];
d a72=x[0][12];
d a78=x[0][13];
d a84=x[0][14];
d a90=x[0][15];
d a96=x[0][16];
d a102=x[0][17];
d a181=x[0][18];
d a182=x[0][19];
d a108=x[0][20];
d a114=x[0][21];
d a2=x[1][0];
d a7=x[1][1];
d a13=x[1][2];
d a19=x[1][3];
d a25=x[1][4];
d a31=x[1][5];
d a37=x[1][6];
d a43=x[1][7];
d a49=x[1][8];
d a55=x[1][9];
d a61=x[1][10];
d a67=x[1][11];
d a73=x[1][12];
d a79=x[1][13];
d a85=x[1][14];
d a91=x[1][15];
d a97=x[1][16];
d a103=x[1][17];
d a183=x[1][18];
d a184=x[1][19];
d a109=x[1][20];
d a115=x[1][21];
d a3=(a1-a2);
d a8=(a6-a7);
d a14=(a12-a13);
d a20=(a18-a19);
d a26=(a24-a25);
d a32=(a30-a31);
d a38=(a36-a37);
d a44=(a42-a43);
d a50=(a48-a49);
d a56=(a54-a55);
d a62=(a60-a61);
d a68=(a66-a67);
d a74=(a72-a73);
d a80=(a78-a79);
d a86=(a84-a85);
d a92=(a90-a91);
d a98=(a96-a97);
d a104=(a102-a103);
d a110=(a108-a109);
d a116=(a114-a115);
d a120=(-(((((((((((((((((((((-3.69095000000000006e-01)*a3)+((-1.04041000000000006e+00)*a8))+((-2.13425999999999982e+00)*a14))+((-4.08673999999999982e-02)*a20))+((-8.41229000000000005e-02)*a26))+(9.07923999999999953e-02*a32))+(1.06655000000000011e+00*a38))+((-1.08845999999999998e+00)*a44))+(6.35066000000000019e-01*a50))+((-1.29848000000000008e+00)*a56))+(1.96974000000000010e-01*a62))+(1.78066999999999998e+00*a68))+(3.98687000000000014e-01*a74))+(1.66189000000000003e-01*a80))+((-1.52711000000000013e-01)*a86))+((-9.49388999999999962e-03)*a92))+((-1.40523000000000002e-02)*a98))+((-5.41089999999999974e-02)*a104))+(1.06472000000000011e+00*a110))+(1.13628999999999998e+01*a116)));
d a180=(-((((((((((((((((((((1.30226000000000008e-01*a3)+((-7.05028000000000044e-02)*a8))+((-2.31241000000000002e-01)*a14))+(1.73048000000000007e-01*a20))+((-1.27454000000000012e-01)*a26))+((-4.70090000000000022e-02)*a32))+(5.51502000000000048e-01*a38))+((-7.88009999999999988e-01)*a44))+((-1.19479000000000002e+00)*a50))+(2.03716000000000001e-02*a56))+((-1.28771999999999998e-01)*a62))+(8.54015999999999997e-01*a68))+(3.69284000000000001e-02*a74))+((-2.69033999999999995e-01)*a80))+(2.67040999999999973e-01*a86))+((-3.11202000000000006e-02)*a92))+(1.45626999999999996e-03*a98))+((-1.92656999999999995e-01)*a104))+(1.51745000000000001e+01*a110))+(1.35115000000000013e-01*a116)));
r[0][0]=a120;
r[0][1]=a180;
return 0;
}

