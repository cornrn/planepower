#!/usr/bin/env deployer

var ConnPolicy cp
# Soem
import("soem_master")
import("soem_ebox")
loadComponent("soemMaster","soem_master::SoemMasterComponent") 
soemMaster.ifname = "eth1"
setActivity("soemMaster",0.002,HighestPriority,ORO_SCHED_RT)
soemMaster.configure()
soemMaster.start()

# voltage controller
import("voltageController")
loadComponent("voltageController","OCL::VoltageController")
setActivity("voltageController",0.01,HighestPriority,ORO_SCHED_RT)
connectPeers("voltageController","soemMaster")
voltageController.configure()
voltageController.start()

#encoder
import("encoder")
loadComponent("encoder","OCL::Encoder")
encoder.encoderPort = 0;
setActivity("encoder",0.0,HighestPriority,ORO_SCHED_RT)
connectPeers("encoder","soemMaster")
connect("encoder.encoderTimeStampIn","masterTimer.cameraClock",cp)
encoder.configure()
encoder.start()

#MasterTimer
import("masterTimer")
loadComponent("masterTimer","OCL::MasterTimer")
loadService("masterTimer","marshalling")
masterTimer.marshalling.loadProperties("../../../properties/masterTimer.cpf")
var double base_hz = masterTimer.imu_target_hz;
setActivity("masterTimer",1.0/base_hz,HighestPriority,ORO_SCHED_RT)
masterTimer.configure()
masterTimer.start()

# McuHandler
import("mcuHandler")
loadComponent("mcuHandler","McuHandler")
loadService("mcuHandler","marshalling")
mcuHandler.marshalling.loadProperties("../../../properties/tcp.cpf")
setActivity("mcuHandler",0,HighestPriority,ORO_SCHED_RT)
mcuHandler.useExternalTrigger = true
connect("masterTimer.imuClock","mcuHandler.imuTrigger",cp)
mcuHandler.configure()
mcuHandler.start()


#ImuBuffer
import("imuBuffer")
loadComponent("imuBuffer","OCL::ImuBuffer")
setActivity("imuBuffer",0,HighestPriority,ORO_SCHED_RT)
connect("masterTimer.imuCameraRatio","imuBuffer.imuCameraRatio",cp)
connect("imuBuffer.imuData","mcuHandler.imuData",cp)
imuBuffer.configure()
imuBuffer.start()


#reporter
loadComponent("reporter","OCL::FileReporting")
setActivity("reporter",0.0,HighestPriority,ORO_SCHED_RT)

connectPeers("reporter","imuBuffer")

reporter.reportPort("imuBuffer","imuMeanCov")
#(optionally, overwrite the default report file name)
reporter.ReportFile = "data1.dat"
reporter.NullSample = "nan" 
reporter.configure()
#reporter.start()
