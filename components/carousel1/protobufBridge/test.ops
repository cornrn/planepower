#!/usr/bin/env deployer

import("protobufBridge")
#import("mcuHandler")
import("lineAngleSensor")
import("soem_master")
import("soem_ebox")
 
loadComponent("protobufBridge","ProtobufBridge")
loadComponent("lineAngleSensor","LineAngleSensor")

# Master frequency at which all of our components in this experiment run
var double master_freq = 10.0 # hz

loadComponent("soemMaster","soem_master::SoemMasterComponent") 
soemMaster.ifname = "eth1"
setActivity("soemMaster", 1.0/master_freq, HighestPriority, ORO_SCHED_RT)
soemMaster.configure()
soemMaster.start()

#loadComponent("mcuHandler","McuHandler")
#loadService("mcuHandler","marshalling")
#mcuHandler.marshalling.loadProperties("../../../properties/tcp.cpf")
#mcuHandler.Ts = 1.0 / master_freq
#mcuHandler.rtMode = true

#setActivity("mcuHandler", .01, HighestPriority, ORO_SCHED_RT)
setActivity("lineAngleSensor", 0.1, HighestPriority, ORO_SCHED_RT)
setActivity("protobufBridge",0.1,HighestPriority,ORO_SCHED_RT)

var ConnPolicy cp
connectPeers("soemMaster", "lineAngleSensor")
connect("soemMaster.Slave_1001.Measurements", "lineAngleSensor.eboxOut", cp)
connect("lineAngleSensor.data", "protobufBridge.portLineAngleData", cp)
 
#mcuHandler.configure()
#mcuHandler.start()

lineAngleSensor.configure()
lineAngleSensor.start()
 
protobufBridge.configure()
protobufBridge.start()
