#!/usr/bin/env deployer

#Import libraries
import("proportionalController")
import("mcuHandler")
import("lineAngleSensor")
import("soem_master")
import("soem_ebox")
 
# Master frequency at which all of our components in this experiment run
var double master_freq = 100.0 # hz

loadComponent("soemMaster","soem_master::SoemMasterComponent") 
soemMaster.ifname = "eth1"
setActivity("soemMaster", 1.0/master_freq, HighestPriority, ORO_SCHED_RT)
soemMaster.configure()
soemMaster.start()

loadComponent("mcuHandler","McuHandler")
loadService("mcuHandler","marshalling")
mcuHandler.marshalling.loadProperties("../../../properties/tcp.cpf")
mcuHandler.Ts = 1.0 / master_freq
mcuHandler.rtMode = true

loadComponent("proportionalController","ProportionalController")
loadComponent("lineAngleSensor","LineAngleSensor")

setActivity("mcuHandler", .01, HighestPriority, ORO_SCHED_RT)
setActivity("proportionalController", 0 , HighestPriority, ORO_SCHED_RT)
setActivity("lineAngleSensor", 0, HighestPriority, ORO_SCHED_RT)
#masterTimer.setCpuAffinity( 7 )

var ConnPolicy cp
connectPeers("soemMaster", "lineAngleSensor")
connect("soemMaster.Slave_1001.Measurements", "lineAngleSensor.eboxOut", cp)
connect("lineAngleSensor.data", "proportionalController.lasData", cp)
connect("proportionalController.controls", "mcuHandler.controls", cp)
connect("proportionalController.triggerOut", "mcuHandler.trigger", cp)
 
mcuHandler.configure()
mcuHandler.start()

lineAngleSensor.configure()
lineAngleSensor.start()

proportionalController.configure()
#proportionalController.start()


