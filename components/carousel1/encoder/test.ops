#!/usr/bin/env deployer

var ConnPolicy cp

# MasterTimer
import("masterTimer")
loadComponent("masterTimer","MasterTimer")
loadService("masterTimer","marshalling")
masterTimer.marshalling.loadProperties("../../../properties/masterTimer.cpf")
var double base_hz = masterTimer.imu_target_hz;
setActivity("masterTimer", 1.0 / base_hz, 97, ORO_SCHED_RT)
masterTimer.configure()
masterTimer.start()

# SOEM
import("soem_master")
import("soem_ebox")
loadComponent("soemMaster","soem_master::SoemMasterComponent") 
soemMaster.ifname = "eth1"
setActivity("soemMaster", 0.001, 98, ORO_SCHED_RT)

soemMaster.configure()
soemMaster.start()

# Encoder
import("encoder")
loadComponent("encoder","Encoder")
encoder.encoderPort = 0
# Same as for SOEM master
encoder.Ts = 0.001
setActivity("encoder", 0.0, 99, ORO_SCHED_RT)

#connectPeers("encoder","soemMaster")
#connect("encoder.trigger","masterTimer.cameraClock",cp)

connect("soemMaster.Slave_1001.Measurements", "encoder.eboxOut", cp)

encoder.configure()
encoder.start()

# voltageController
import("voltageController")
loadComponent("voltageController","VoltageController")
setActivity("voltageController", 0.01, LowestPriority, ORO_SCHED_RT)
connectPeers("voltageController","soemMaster")

voltageController.configure()
voltageController.start()

loadComponent("reporter", "OCL::NetcdfReporting")
setActivity("reporter", 0.0, LowestPriority, ORO_SCHED_RT)

connect("soemMaster.Slave_1001.AnalogIn", "voltageController.eboxAnalog", cp)

var ConnPolicy rp
rp.type = 2
rp.size = 4096

connectPeers("reporter", "encoder")
reporter.reportComponent("encoder")
reporter.ReportPolicy = rp
 
#(optionally, overwrite the default report file name)
reporter.ReportFile = "encoderTest.nc"
 
reporter.configure()
reporter.start()
