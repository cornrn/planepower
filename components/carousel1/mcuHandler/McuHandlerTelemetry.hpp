#ifndef __MCU_HANDLER_TELEMETRY__
#define __MCU_HANDLER_TELEMETRY__

#include <rtt/TaskContext.hpp>
#include <rtt/Port.hpp>

/// Custom data type used by OROCOS
#include "types/McuHandlerDataType.hpp"
/// Protobuf header, autogenerated
#include "McuHandlerTelemetry.pb.h"

/// A simple telemetry class for the McuHandler
class McuHandlerTelemetry
	: public RTT::TaskContext
{
public:
	/// Ctor
	McuHandlerTelemetry(std::string name);
	
	/// Dtor
	virtual ~McuHandlerTelemetry()
	{}
	
	/// Configuration hook.
	virtual bool configureHook( );
	/// Start hook.
	virtual bool startHook( );
	/// Update hook.
	virtual void updateHook( );
	/// Stop hook.
	virtual void stopHook( );
	/// Cleanup hook.
	virtual void cleanupHook( );
	/// Error hook.
	virtual void errorHook( );

protected:
	/// Data holder 
	McuHandlerDataType msgData;
	/// Input port data
	RTT::InputPort< McuHandlerDataType > portMsgData;

private:

	McuHandlerProto::McuHandlerMsg msg;
};

#endif // __MCU_HANDLER_TELEMETRY__
