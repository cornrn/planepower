/* Auto-generated by genmsg_cpp for file /home/kurt/planepower/components/lowlevel/soem/soem_ebox/msg/EBOXPWM.msg */
#ifndef SOEM_EBOX_MESSAGE_EBOXPWM_H
#define SOEM_EBOX_MESSAGE_EBOXPWM_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
//#include "ros/serialization.h"
//#include "ros/builtin_message_traits.h"
//#include "ros/message_operations.h"
//#include "ros/time.h"

//#include "ros/macros.h"

//#include "ros/assert.h"


namespace soem_ebox
{
template <class ContainerAllocator>
struct EBOXPWM_ {
  typedef EBOXPWM_<ContainerAllocator> Type;

  EBOXPWM_()
  : pwm()
  {
    pwm.assign(0.0);
  }

  EBOXPWM_(const ContainerAllocator& _alloc)
  : pwm()
  {
    pwm.assign(0.0);
  }

  typedef boost::array<float, 2>  _pwm_type;
  boost::array<float, 2>  pwm;


  typedef boost::shared_ptr< ::soem_ebox::EBOXPWM_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::soem_ebox::EBOXPWM_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct EBOXPWM
typedef  ::soem_ebox::EBOXPWM_<std::allocator<void> > EBOXPWM;

typedef boost::shared_ptr< ::soem_ebox::EBOXPWM> EBOXPWMPtr;
typedef boost::shared_ptr< ::soem_ebox::EBOXPWM const> EBOXPWMConstPtr;

} // namespace soem_ebox

#endif // SOEM_EBOX_MESSAGE_EBOXPWM_H

