/*
 *    This file was auto-generated by ACADO Toolkit.
 *
 *    ACADO Toolkit -- A Toolkit for Automatic Control and Dynamic Optimization.
 *    Copyright (C) 2008-2011 by Boris Houska, Hans Joachim Ferreau et al., K.U.Leuven.
 *    Developed within the Optimization in Engineering Center (OPTEC) under
 *    supervision of Moritz Diehl. All rights reserved.
 *
 */

#ifndef ACADOIF
#define ACADOIF


#include <stdio.h>
#include <math.h>
#include <time.h>
#include <sys/stat.h>
#include <sys/time.h>

#include "qpoases/solver.hpp"


/* GLOBAL VARIABLES:                */
/* -------------------------------- */
typedef struct ACADOvariables_ {
real_t x[132];
real_t u[10];
real_t xRef[110];
real_t uRef[10];
real_t Q[484];
real_t R[4];
real_t QF[484];

} ACADOvariables;


/* GLOBAL WORKSPACE:                */
/* -------------------------------- */
typedef struct ACADOworkspace_ {
real_t rk_dim22_temp[23];
real_t acado_aux[9399];
real_t rk_ttt;
real_t rk_xxx[24];
real_t rk_kkk[22];
real_t rk_sol[22];
real_t rk_A[484];
real_t rk_b[22];
real_t rk_rhsTemp[22];
real_t rk_diffsTemp[528];
int rk_num;
real_t rk_diffsPrev[528];
real_t rk_diffsNew[528];
real_t QQF[484];
real_t state[552];
real_t residuum[110];
real_t g1[10];
real_t H01[220];
real_t H11[100];
real_t lbA[60];
real_t ubA[60];
real_t d[110];
real_t deltaX0[22];
real_t C[2420];
real_t QC[2420];
real_t Gx[484];
real_t E[1100];
real_t QE[1100];
real_t Gu[44];
real_t Dx[110];
real_t QDx[110];
real_t Du[10];
real_t RDu[10];

} ACADOworkspace;


/* GLOBAL FORWARD DECLARATIONS:          */
/* ------------------------------------- */
void integrate( real_t* rk_eta );
void acado_rhs( real_t*, real_t* );
void acado_diffs( real_t*, real_t* );
void solve_dim22_system( real_t* A, real_t* b, real_t* x );
void solve_dim22_system_reuse( real_t* A, real_t* b, real_t* x );
void condense1( int index, real_t* yy );
void condense2(  );
void expand(  );
void setupQP(  );
void multiplyQC1( real_t* Q, real_t* C1, real_t* QC1 );
void multiplyQE1( real_t* Q, real_t* E1, real_t* QE1 );
void multiplyQDX1( real_t* Q, real_t* Dx1, real_t* QDx1 );
void multiplyRDU1( real_t* R, real_t* Du1, real_t* RDu1 );
void multiplyQC2( real_t* QQF, real_t* C1, real_t* QC1 );
void multiplyQE2( real_t* QQF, real_t* E1, real_t* QE1 );
void multiplyQDX2( real_t* QQF, real_t* Dx1, real_t* QDx1 );
void multiplyC( real_t* Gx, real_t* C1, real_t* C1_new );
void multiplyE( real_t* Gx, real_t* E1, real_t* E1_new );
void multiplyG1( real_t* E, real_t* QDx, real_t* g1 );
void multiplyCD1( real_t* Gx, real_t* d1, real_t* d1_new );
void multiplyEU1( real_t* Gu, real_t* u1, real_t* d1_new );
void multiplyH01( real_t* C, real_t* QE, real_t* H01 );
void multiplyH11( real_t* E, real_t* QE, real_t* H11 );
real_t getObjectiveValue(  );
void preparationStep(  );
void initialValueEmbedding(  );
int feedbackStep( real_t* x0 );
void shiftControls( real_t* uEnd );
void shiftStates( real_t* xEnd );
real_t getKKT(  );
real_t* getAcadoVariablesX(  );
real_t* getAcadoVariablesU(  );
real_t* getAcadoVariablesXRef(  );
real_t* getAcadoVariablesURef(  );
void printStates(  );
void printControls(  );
real_t getTime(  );
void printHeader(  );
/* ------------------------------------- */


/* EXTERN DECLARATIONS:                  */
/* ------------------------------------- */
extern ACADOworkspace acadoWorkspace;
extern ACADOvariables acadoVariables;
/* ------------------------------------- */

#endif

/* END OF FILE. */

