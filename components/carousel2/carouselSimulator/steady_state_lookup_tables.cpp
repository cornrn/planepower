// Warning!!! This file was code generated by analyze_steady_states.py!
// These functions perform lookups in both directions for the steady state height of the ball vs. carousel arm speed.
#include <math.h>
#include <iostream>
using namespace std;

double lookup_steady_state_speed(double elevation)
{
    const double elevationMin = -1.13435923713;
    const double elevationMax = -0.313306331635;
    const static double speedTable[256] = {
			1.17492049566, 1.1809827249, 1.18699347483, 1.19295325001, 
			1.19886255498, 1.20472189428, 1.21053177245, 1.21629269404, 
			1.22200516358, 1.22766968562, 1.2332867647, 1.23885690537, 
			1.24438061217, 1.24985838964, 1.25529074232, 1.26067817476, 
			1.2660211915, 1.27132029708, 1.27657599604, 1.28178879293, 
			1.28695919229, 1.29208769866, 1.29717481659, 1.30222105061, 
			1.30722690528, 1.31219288512, 1.3171194947, 1.32200723854, 
			1.32685662119, 1.33166814719, 1.33644232109, 1.34117964743, 
			1.34588063076, 1.3505457756, 1.35517558651, 1.35977056804, 
			1.36433122471, 1.36885806108, 1.37335158169, 1.37781229108, 
			1.38224069379, 1.38663729436, 1.39100259735, 1.39533710728, 
			1.39964132871, 1.40391576618, 1.40816092422, 1.41237730739, 
			1.41656542022, 1.42072576726, 1.42485885305, 1.42896518212, 
			1.43304525904, 1.43709958833, 1.44112867455, 1.44513302222, 
			1.4491131359, 1.45306952013, 1.45700267945, 1.46091311841, 
			1.46480134154, 1.46866785339, 1.4725131585, 1.47633776142, 
			1.48014216669, 1.48392687884, 1.48769240243, 1.49143924199, 
			1.49516790207, 1.49887888721, 1.50257270195, 1.50624985084, 
			1.50991083842, 1.51355616923, 1.51718634781, 1.52080187871, 
			1.52440326647, 1.52799101563, 1.53156563073, 1.53512761633, 
			1.53867747695, 1.54221571714, 1.54574284145, 1.54925935442, 
			1.55276576059, 1.5562625645, 1.5597502707, 1.56322938373, 
			1.56670040813, 1.57016384844, 1.57362020921, 1.57706999498, 
			1.58051371029, 1.58395185968, 1.5873849477, 1.5908134789, 
			1.5942379578, 1.59765888896, 1.60107677692, 1.60449212622, 
			1.6079054414, 1.61131722701, 1.61472798759, 1.61813822768, 
			1.62154845182, 1.62495916456, 1.62837087044, 1.631784074, 
			1.63519927979, 1.63861699235, 1.64203771621, 1.64546195593, 
			1.64889021604, 1.65232300109, 1.65576081562, 1.65920416418, 
			1.6626535513, 1.66610948153, 1.66957245941, 1.67304298949, 
			1.6765215763, 1.68000872439, 1.68350493831, 1.68701072259, 
			1.69052658178, 1.69405302041, 1.69759054304, 1.70113965421, 
			1.70470085846, 1.70827466032, 1.71186156435, 1.71546207509, 
			1.71907669707, 1.72270593485, 1.72635029296, 1.73001027595, 
			1.73368638835, 1.73737913472, 1.7410890196, 1.74481654752, 
			1.74856222303, 1.75232655068, 1.756110035, 1.75991318054, 
			1.76373649184, 1.76758047345, 1.7714456299, 1.77533246574, 
			1.77924148551, 1.78317319376, 1.78712809503, 1.79110669385, 
			1.79510949478, 1.79913700235, 1.80318972111, 1.8072681556, 
			1.81137281036, 1.81550418994, 1.81966279888, 1.82384914172, 
			1.828063723, 1.83230704727, 1.83657961907, 1.84088194294, 
			1.84521452342, 1.84957786507, 1.85397247241, 1.85839884999, 
			1.86285750236, 1.86734893406, 1.87187364963, 1.87643215361, 
			1.88102495055, 1.88565254499, 1.89031544147, 1.89501414453, 
			1.89974915872, 1.90452098857, 1.90933013864, 1.91417711347, 
			1.91906241759, 1.92398655555, 1.9289500319, 1.93395335117, 
			1.93899701791, 1.94408153666, 1.94920741196, 1.95437514836, 
			1.9595852504, 1.96483822262, 1.97013456956, 1.97547479577, 
			1.98085940579, 1.98628890416, 1.99176379543, 1.99728458413, 
			2.00285177481, 2.00846587202, 2.01412738029, 2.01983680417, 
			2.0255946482, 2.03140141693, 2.03725761489, 2.04316374663, 
			2.04912031669, 2.05512782962, 2.06118678995, 2.06729770223, 
			2.07346107101, 2.07967740082, 2.0859471962, 2.09227096171, 
			2.09864920188, 2.10508242126, 2.11157112438, 2.1181158158, 
			2.12471700005, 2.13137518167, 2.13809086522, 2.14486455522, 
			2.15169675623, 2.15858797279, 2.16553870944, 2.17254947072, 
			2.17962076117, 2.18675308534, 2.19394694778, 2.20120285301, 
			2.20852130559, 2.21590281006, 2.22334787096, 2.23085699284, 
			2.23843068023, 2.24606943768, 2.25377376973, 2.26154418093, 
			2.26938117581, 2.27728525893, 2.28525693481, 2.29329670801, 
			2.30140508307, 2.30958256453, 2.31782965693, 2.32614686482, 
			2.33453469274, 2.34299364523, 2.35152422683, 2.36012694209, 
			2.36880229555, 2.37755079175, 2.38637293523, 2.39526923054, 
			2.40424018222, 2.41328629482, 2.42240807287, 2.43160602092};
    if ((elevation < elevationMin) || (elevation > elevationMax)) 
    {
        cout << "WARNING!!! Value passed to lookup_steady_state_speed was out of range!!!" << endl;
        return nan("");
    }
    double elevationScaled = (elevation-elevationMin)*(1.0/(elevationMax-elevationMin))*255.0;
    double speed1 = speedTable[(int)floor(elevationScaled)];
    double speed2 = speedTable[(int)ceil(elevationScaled)];
    double speed = speed1 + (speed2-speed1) * (elevationScaled - floor(elevationScaled));
    return speed;
}


double lookup_steady_state_elevation(double speed)
{
    const double speedMin = 1.18095227562;
    const double speedMax = 2.40945183705;
    const static double elevationTable[256] = {
			-1.142984194, -1.13993382348, -1.13685971251, -1.13376213481, 
			-1.13064136413, -1.1274976742, -1.12433133876, -1.12114263154, 
			-1.11793182627, -1.1146991967, -1.11144501656, -1.10816955957, 
			-1.10487309949, -1.10155591005, -1.09821826497, -1.094860438, 
			-1.09148270287, -1.08808533331, -1.08466860307, -1.08123278588, 
			-1.07777815546, -1.07430498557, -1.07081354993, -1.06730412229, 
			-1.06377697636, -1.0602323859, -1.05667062463, -1.0530919663, 
			-1.04949668463, -1.04588505337, -1.04225734624, -1.03861383699, 
			-1.03495479935, -1.03128050705, -1.02759123383, -1.02388725343, 
			-1.02016883958, -1.01643626601, -1.01268980647, -1.00892973469, 
			-1.0051563244, -1.00136984934, -0.997570583242, -0.993758799846, 
			-0.989934772885, -0.986098776095, -0.982251083211, -0.97839196797, 
			-0.974521704106, -0.970640565355, -0.966748825453, -0.962846758135, 
			-0.958934637137, -0.955012736193, -0.951081329041, -0.947140689414, 
			-0.943191091049, -0.939232807681, -0.935266113046, -0.931291280879, 
			-0.927308584916, -0.923318298892, -0.919320696543, -0.915316051604, 
			-0.911304637811, -0.9072867289, -0.903262598605, -0.899232520662, 
			-0.895196768807, -0.891155616775, -0.887109338303, -0.883058207125, 
			-0.879002496976, -0.874942481593, -0.870878434711, -0.866810630065, 
			-0.862739341392, -0.858664842426, -0.854587406902, -0.850507308557, 
			-0.846424821127, -0.842340218345, -0.838253773949, -0.834165761673, 
			-0.830076455254, -0.825986128426, -0.821895054925, -0.817803508486, 
			-0.813711762846, -0.809620091739, -0.805528768902, -0.801438068069, 
			-0.797348262976, -0.793259627359, -0.789172434953, -0.785086959494, 
			-0.781003474717, -0.776922254358, -0.772843572152, -0.768767701835, 
			-0.764694917142, -0.760625491809, -0.756559699571, -0.752497814164, 
			-0.748440109324, -0.744386858785, -0.740338336283, -0.736294815555, 
			-0.732256570335, -0.728223874358, -0.724197001362, -0.72017622508, 
			-0.716161819248, -0.712154057603, -0.708153213879, -0.704159561812, 
			-0.700173375137, -0.696194927591, -0.692224492908, -0.688262344824, 
			-0.684308757074, -0.680364003395, -0.676428357521, -0.672502093188, 
			-0.668585484132, -0.664678804089, -0.660782326792, -0.656896325979, 
			-0.653021075385, -0.649156848744, -0.645303919794, -0.641462562269, 
			-0.637633049904, -0.633815656436, -0.630010655599, -0.62621832113, 
			-0.622438926763, -0.618672746235, -0.61492005328, -0.611181121635, 
			-0.607456225035, -0.603745637215, -0.600049631911, -0.596368482858, 
			-0.592702463792, -0.589051848449, -0.585416910563, -0.581797923871, 
			-0.578195162108, -0.574608899009, -0.57103940831, -0.567486963747, 
			-0.563951839055, -0.560434307969, -0.556934644226, -0.553453121559, 
			-0.549990013706, -0.546545594402, -0.543120137382, -0.539713916381, 
			-0.536327205135, -0.53296027738, -0.529613406851, -0.526286867284, 
			-0.522980932414, -0.519695875976, -0.516431971707, -0.513189493342, 
			-0.509968714615, -0.506769909264, -0.503593351023, -0.500439313627, 
			-0.497308070813, -0.494199896315, -0.49111506387, -0.488053847213, 
			-0.485016520079, -0.482003356204, -0.479014629323, -0.476050613172, 
			-0.473111581487, -0.470197808002, -0.467309566454, -0.464447130578, 
			-0.461610774109, -0.458800770784, -0.456017394336, -0.453260918503, 
			-0.450531617019, -0.44782976362, -0.445155632042, -0.44250949602, 
			-0.439891629289, -0.437302305586, -0.434741798645, -0.432210382202, 
			-0.429708329993, -0.427235915753, -0.424793413217, -0.422381096122, 
			-0.419999238202, -0.417648113194, -0.415327994832, -0.413039156852, 
			-0.410781872991, -0.408556416982, -0.406363062562, -0.404202083467, 
			-0.402073753431, -0.39997834619, -0.397916135481, -0.395887395038, 
			-0.393892398596, -0.391931419892, -0.390004732661, -0.388112610638, 
			-0.386255327559, -0.384433157159, -0.382646373175, -0.38089524934, 
			-0.379180059392, -0.377501077065, -0.375858576096, -0.374252830218, 
			-0.372684113169, -0.371152698683, -0.369658860496, -0.368202872344, 
			-0.366785007962, -0.365405541086, -0.36406474545, -0.362762894791, 
			-0.361500262844, -0.360277123345, -0.359093750029, -0.357950416632, 
			-0.356847396889, -0.355784964536, -0.354763393307, -0.35378295694, 
			-0.352843929169, -0.351946583729, -0.351091194357, -0.350278034787, 
			-0.349507378756, -0.348779499999, -0.34809467225, -0.347453169247, 
			-0.346855264724, -0.346301232417, -0.345791346061, -0.345325879393, 
			-0.344905106146, -0.344529300058, -0.344198734863, -0.343913684297};
    if ((speed < speedMin) || (speed > speedMax)) 
    {
        cout << "WARNING!!! Value passed to lookup_steady_state_elevation was out of range!!!" << endl;
        return nan("");
    }
    double speedScaled = (speed-speedMin)*(1.0/(speedMax-speedMin))*255.0;
    double elevation1 = elevationTable[(int)floor(speedScaled)];
    double elevation2 = elevationTable[(int)ceil(speedScaled)];
    double elevation = elevation1 + (elevation2-elevation1) * (speedScaled - floor(speedScaled));
    return elevation;
}

