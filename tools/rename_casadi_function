#!/bin/bash
# This script takes a *.c file exported by casadi,
# strips out the "evaluate" function (which must be the last thing
# in the file), clobbers "const" specifiers, and renames the function
# after the file, and saves it out as a .cpp and a .hpp file.

if [ $# != 2 ]
then
	echo "Wrong number of inputs!"
	echo "Usage: clean_casadi_function infile.c outfile.cpp"
	exit 1
fi
infile=$1
outfile=$2

echo "//Warning!!! This file was auto-generated by the clean_casadi_function script!" > $outfile
echo "#include <math.h>" >> $outfile

y=`basename $infile .c`
sed -e "s/evaluate/${y}/" -ne "/${y}/,$ p" < $infile >> $outfile
#sed -i -e 's/const//' $outfile
#sed -i -e 's/\<d\>/double/' $outfile
# For some reason, those sed -i are not playing well with tup...
vim -V0 --cmd "e $outfile|%s/const//|wq"
vim -V0 --cmd "e $outfile|%s/\<d\>/double/|wq"

# Generate the header, starting with the warning,
headerfilename=$(dirname $outfile)/$(basename $outfile .cpp).h
cat $outfile | head -2 > $headerfilename
# Then, the prototype...
cat $outfile | head -3 | tail -1| sed -e "s/{/;/" >> $headerfilename
echo "">>$headerfilename


