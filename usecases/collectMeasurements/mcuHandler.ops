#Import libraries
import("mcuHandler")
import("masterTimer")

#Create components
loadComponent("mcuHandler","McuHandler")
loadComponent("masterTimer","OCL::MasterTimer")

#Load properties
loadService("mcuHandler","marshalling")
mcuHandler.marshalling.loadProperties("../../../properties/tcp.cpf")
mcuHandler.useExternalTrigger = true
masterTimer.imu_target_hz = 800.0
masterTimer.camera_target_hz = 800.0

#Set activities
setActivity("mcuHandler",0,HighestPriority,ORO_SCHED_RT)
setActivity("masterTimer",0.0001,HighestPriority,ORO_SCHED_RT)

#Connect ports
var ConnPolicy cp
connect("masterTimer.imuClock","mcuHandler.imuTrigger",cp)

mcuHandler.configure()
mcuHandler.start()
masterTimer.configure()
masterTimer.start()

#Ledtracker
import("LEDTracker")
loadComponent("LEDTracker","OCL::LEDTracker")
connect("masterTimer.cameraClock","LEDTracker.",cp)

LEDTracker.configure()
#LEDTracker.start()

#Camera trigger
import("cameraTrigger")
import("soem_master")
import("soem_ebox")
#Create components
loadComponent("cameraTrigger","OCL::CameraTrigger")
loadComponent("soemMaster","soem_master::SoemMasterComponent") 
 
#Load properties
#loadService("cameraTrigger","marshalling")
#cameraTrigger.marshalling.loadProperties("../../../properties/cameraTrigger/cameraTrigger.cpf")
soemMaster.ifname = "eth1"
 
#Set activities
setActivity("cameraTrigger",0.1,HighestPriority,ORO_SCHED_RT)
setActivity("soemMaster",0.01,HighestPriority,ORO_SCHED_RT)

connectPeers("cameraTrigger","soemMaster")
 
soemMaster.configure()
soemMaster.start() 
cameraTrigger.configure()
cameraTrigger.start()







loadComponent("reporter","OCL::FileReporting")
setActivity("reporter",0.0,HighestPriority,ORO_SCHED_RT)

connectPeers("reporter","mcuHandler")

reporter.reportPort("mcuHandler","imuTimeStamp")
reporter.reportPort("mcuHandler","imuData")
 
#(optionally, overwrite the default report file name)
reporter.ReportFile = "data.dat"
 
reporter.configure()
#reporter.start()
