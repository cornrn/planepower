# Description: A script for data-acquisition testing
# Author:      Milan Vukov, milan.vukov@esat.kuleuven.be
# Date:        May, 2013

################################################################################
#
# Import and load components
#
################################################################################

# Master Timer
import("masterTimer")
loadComponent("masterTimer", "MasterTimer")

# MCU Handler
import("mcuHandler")
loadComponent("mcuHandler", "McuHandler")

# SOEM
import("soem_master")
import("soem_ebox")
loadComponent("soemMaster", "soem_master::SoemMasterComponent")

# Voltage controller
import("voltageController")
loadComponent("voltageController", "VoltageController")

# Encoder
import("encoder")
loadComponent("encoder", "Encoder")

# Camera trigger
import("cameraTrigger")
loadComponent("cameraTrigger","OCL::CameraTrigger")

# LEDTracker
import("LEDTracker")
loadComponent("LEDTracker","OCL::LEDTracker")

# Pose from markers
#import("poseFromMarkers")
#loadComponent("poseFromMarkers","OCL::PoseFromMarkers")

# OCL reporter
loadComponent("imuReporter", "OCL::NetcdfReporting")
loadComponent("cameraReporter", "OCL::NetcdfReporting")
loadComponent("encoderReporter", "OCL::NetcdfReporting")

################################################################################
#
# Configure components' properties
#
################################################################################

# Master timer
loadService("masterTimer", "marshalling")
masterTimer.marshalling.loadProperties("../../properties/masterTimer.cpf")
var double base_hz = masterTimer.imu_target_hz

# MCU
loadService("mcuHandler","marshalling")
mcuHandler.marshalling.loadProperties("../../properties/tcp.cpf")
mcuHandler.Ts = 1.0 / base_hz
mcuHandler.rtMode = false

# SOEM
soemMaster.ifname = "eth1"

# Voltage controller

# Encoder
encoder.encoderPort = 0;
# Same as for SOEM
encoder.samplingFreq = 1000;

# Camera trigger

# LED tracker - hangs until frame arrival, does processing, and re-triggers itself.
LEDTracker.useExternalTrigger = true;
LEDTracker.sigma_marker = 20;

# Reporters
imuReporter.ReportFile = "imuData.nc"
cameraReporter.ReportFile = "cameraData.nc"
encoderReporter.ReportFile = "encoderData.nc"

################################################################################
#
# Set activities and priorities
#
################################################################################

var int soemPrio = 99
var int masterTimerPrio = 98
var int sensorPrio = 97
var int ocpPrio = 80
var int LEDTrackerPrio = 70

setActivity("masterTimer", 1.0 / base_hz, masterTimerPrio, ORO_SCHED_RT)

setActivity("soemMaster", 0.001, soemPrio,ORO_SCHED_RT)

setActivity("mcuHandler", 0.0, sensorPrio, ORO_SCHED_RT)

setActivity("voltageController", 0.01, sensorPrio, ORO_SCHED_RT)

setActivity("encoder", 0.0, sensorPrio, ORO_SCHED_RT)

setActivity("cameraTrigger", 0.0, sensorPrio, ORO_SCHED_RT)

setActivity("LEDTracker", 0.0, LEDTrackerPrio, ORO_SCHED_RT)

#setActivity("poseFromMarkers", 0.0, LEDTrackerPrio, ORO_SCHED_RT)

setActivity("imuReporter", 0.0, LowestPriority, ORO_SCHED_RT)
setActivity("cameraReporter", 0.0, LowestPriority, ORO_SCHED_RT)
setActivity("encoderReporter", 0.0, LowestPriority, ORO_SCHED_RT)

################################################################################
#
# Connect components
#
################################################################################

connectPeers("encoder", "soemMaster")
connectPeers("cameraTrigger", "soemMaster")

var ConnPolicy cp

connect("masterTimer.imuClock","mcuHandler.trigger", cp)
connect("masterTimer.cameraClock", "LEDTracker.triggerTimeStampIn", cp)
connect("masterTimer.cameraClock", "cameraTrigger.Trigger", cp)
#connect("LEDTracker.markerPositions", "poseFromMarkers.markerPositions", cp)

# VERY special situation! I have to start SOEM master here, before I connect its
# ports...
soemMaster.configure()
soemMaster.start()

connect("voltageController.eboxAnalog", "soemMaster.Slave_1001.AnalogIn", cp)
connect("soemMaster.Slave_1001.Measurements", "encoder.eboxOut", cp)

################################################################################
#
# Reporter configuration
#
################################################################################

connectPeers("imuReporter", "mcuHandler")
imuReporter.reportComponent( "mcuHandler" )

connectPeers("cameraReporter", "LEDTracker")
cameraReporter.reportComponent( "LEDTracker" )

connectPeers("encoderReporter", "encoder")
encoderReporter.reportComponent( "encoder" )

################################################################################
#
# Configure and start components
#
################################################################################

# Just conifgure the master timer component.
masterTimer.configure()

mcuHandler.configure()
mcuHandler.start()

#soemMaster.configure()
#soemMaster.start()

voltageController.configure()
voltageController.start()

encoder.configure()
encoder.start()

cameraTrigger.configure()
cameraTrigger.start()

LEDTracker.configure()
LEDTracker.start()

imuReporter.configure()
imuReporter.start()

cameraReporter.configure()
cameraReporter.start()

encoderReporter.configure()
encoderReporter.start()

# Now, when all other components are started, start the master timer component.
masterTimer.start()
